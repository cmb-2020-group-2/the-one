
#########################
### Scenario settings ###

# Name to identify the present scenario
Scenario.name = [seed0; seed1; seed2; seed3; seed4; seed5; seed6; seed7; seed8; seed9]
# How frequently to sample the simulation
Scenario.updateInterval = 0.1
# How long the simulation will run (in seconds)
# 1 week
Scenario.endTime = 604800

Scenario.simulateConnections = true
Scenario.nrofHostGroups = 9

###############################
### Movement model settings ###

MovementModel.worldSize = 2150, 2000
MovementModel.rngSeed = [0; 22; 42; 1071; 1453; 1881; 1923; 1939; 1996; 2023]

MapBasedMovement.nrofMapFiles = 16
MapBasedMovement.mapFile1 = data/mi/1-corridor.wkt
MapBasedMovement.mapFile2 = data/mi/2-corridor.wkt
MapBasedMovement.mapFile3 = data/mi/3-corridor.wkt
MapBasedMovement.mapFile4 = data/mi/4-corridor.wkt
MapBasedMovement.mapFile5 = data/mi/5-corridor.wkt
MapBasedMovement.mapFile6 = data/mi/6-corridor.wkt
MapBasedMovement.mapFile7 = data/mi/7-corridor.wkt
MapBasedMovement.mapFile8 = data/mi/8-corridor.wkt
MapBasedMovement.mapFile9 = data/mi/9-corridor.wkt
MapBasedMovement.mapFile10 = data/mi/10-corridor.wkt

MapBasedMovement.mapFile11 = data/mi/main1_corridor.wkt
MapBasedMovement.mapFile12 = data/mi/main_entrance.wkt
MapBasedMovement.mapFile13 = data/mi/main2_corridor.wkt

MapBasedMovement.mapFile14 = data/mi/u-bahn.wkt

MapBasedMovement.mapFile15 = data/mi/corridor-connections.wkt
MapBasedMovement.mapFile16 = data/mi/course-corridor-connections.wkt

############
## Events ##
## Message creation parameters
# How many event generators
Events.nrof = 1
# Class of the first event generator
Events1.class = SingleMessageGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
Events1.interval = 1
# Message sizes (50kB - 150kB)
Events1.size = 500k
# range of message source/destination addresses
Events1.hosts = 1,98
Events1.toHosts = 0,0
# Message ID prefix
Events1.prefix = M
Events1.maxNumEvents = 3

##########################
### Network Interfaces ###

# speed decreases as distance increases
n95MaskInterface.type = DistanceCapacityInterface
n95MaskInterface.transmitRange = 1
# Max min speed, the speed between the steps is linearly interpolated.
n95MaskInterface.transmitSpeeds = 5k, 3k, 1k
n95MaskInterface.ubahnLocation = 1910, -75
n95MaskInterface.cigaretteLocations = data/mi/cigarette.wkt


surgicalMaskInterface.type = DistanceCapacityInterface
surgicalMaskInterface.transmitRange = 5
# Max min speed, the speed between the steps is linearly interpolated.
surgicalMaskInterface.transmitSpeeds = 5k, 3k, 1k
surgicalMaskInterface.ubahnLocation = 1910, -75
surgicalMaskInterface.cigaretteLocations = data/mi/cigarette.wkt

bareInterface.type = DistanceCapacityInterface
bareInterface.transmitRange = 10
bareInterface.transmitSpeeds = 10k, 8k, 6k
# src: https://www.thelancet.com/journals/lancet/article/PIIS0140-6736(20)31142-9/fulltext
bareInterface.ubahnLocation = 1910, -75
bareInterface.cigaretteLocations = data/mi/cigarette.wkt

classInterface.type = DistanceCapacityInterface
classInterface.transmitRange = 50
classInterface.transmitSpeeds = 2k
classInterface.ubahnLocation = 1910, -75
# color red blue magenta cyan and yellow supported.
classInterface.rangeColor = cyan

cigaretteInterface.type = DistanceCapacityInterface
cigaretteInterface.transmitRange = 20
cigaretteInterface.transmitSpeeds = 2k
cigaretteInterface.ubahnLocation = 1910, -75
# color red blue magenta cyan and yellow supported.
cigaretteInterface.rangeColor = cyan

# this value is not used but needed
n95MaskInterface.transmitSpeed = 1
surgicalMaskInterface.transmitSpeed = 1
### this value is not used but needed
bareInterface.transmitSpeed = 1
### this value is not used but needed
classInterface.transmitSpeed = 1
cigaretteInterface.transmitSpeed = 1

classInterface.interfaceType = stationary
cigaretteInterface.interfaceType = stationary

##############
### Groups ###

## Common settings for all groups

# Mobility model for all the nodes
Group.movementModel = MapBasedMovement
Group.router = EpidemicRouter
# Buffer size of any node
Group.bufferSize = 5M
Group.nrofInterfaces = 1
# Walking speeds
Group.speed = 0.1, 1
# Message TTL of 300 minutes (5 hours)
# Group.msgTtl = 300

# Student Day Parameters
Group.breakProb = 0.6
Group.courseProb = 0.8
Group.uBahnProb = 0.5
Group.ubahnLocation = 1910, -75

# Course Related Parameters
Group.courseLength = 2400, 4800
Group.nrOfCourses = 30
Group.courseSize = 100
Group.courseLocationsFile = data/mi/courses.wkt

# Break Related Parameters
Group.breakLength = 600, 1200
Group.nrOfTables = 20
Group.tablesFile = data/mi/tables.wkt

# Cigarette Related Parameters
Group.cigaretteLength = 300, 600
Group.nrOfCigaretteSpots = 2
Group.cigaretteSpotSize = 50
Group.cigaretteSpotsFile = data/mi/cigarette.wkt

# Group1 with a single stationary node without networking that serves as a fake destination for the message.
Group1.groupID = dest
Group1.nrofHosts = 1
Group1.movementModel = StationaryMovement
Group1.nodeLocation = 0,0
Group1.nrofInterfaces = 0

## Group 2 Students in building with masks
Group2.groupID = SM
Group2.nrofHosts = 25
Group2.movementModel = StudentDayMovement
Group2.okMaps = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
Group2.interface1 = surgicalMaskInterface

## Group 3 Students in building without mask
Group3.groupID = SB
Group3.nrofHosts = 8
Group3.movementModel = StudentDayMovement
Group3.okMaps = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
Group3.interface1 = bareInterface

## Group 4 Students with map based movement without mask
Group4.groupID = MB
Group4.nrofHosts = 5
Group4.mapBasedWait = 100, 250
Group4.okMaps = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
Group4.interface1 = bareInterface

## Group 5 Students with map based movement with masks
Group5.groupID = MM
Group5.nrofHosts = 8
Group5.mapBasedWait = 100, 250
Group5.okMaps = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
Group5.interface1 = surgicalMaskInterface

# Group 6 Class Nodes
Group6.groupID = C
Group6.nrofHosts = 30
Group6.movementModel = ClassStationaryMovement
Group6.classLocationsFile = data/mi/courses.wkt
Group6.nrofInterfaces = 1
Group6.interface1 = classInterface

# Group 7 Cigarette Point Nodes
Group7.groupID = CS
Group7.nrofHosts = 2
Group7.movementModel = CigaretteStationaryMovement
Group7.cigaretteLocationsFile = data/mi/cigarette.wkt
Group7.nrofInterfaces = 1
Group7.interface1 = cigaretteInterface


## Group 8 Students in building with n95 masks
Group8.groupID = SN
Group8.nrofHosts = 10
Group8.movementModel = StudentDayMovement
Group8.okMaps = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
Group8.interface1 = n95MaskInterface

## Group 9 Students with map based movement n95 masks
Group9.groupID = MN
Group9.nrofHosts = 10
Group9.mapBasedWait = 100, 250
Group9.okMaps = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
Group9.interface1 = n95MaskInterface

#############
## Reports ##
Report.nrofReports = 7
# Directory where reports would be created
Report.reportDir = reports/Assignment-1
# Report classes to load
Report.report1 = CovidTransmissionReport
Report.report2 = MessageGraphvizReport
Report.report3 = CovidStatsReport
Report.report4 = EncountersVSUniqueEncountersReport
Report.report5 = ContactsPerHourReport
Report.report6 = NodeDensityReport
Report.report7 = TotalContactTimeReport

TotalContactTimeReport.granularity = 1000
NodeDensityReport.sampleInterval = 10
NodeDensityReport.xCount = 128
NodeDensityReport.yCount = 128
NodeDensityReport.outputGnuplot = true
NodeDensityReport.onlyAverage = true


##################
## GUI settings ##

# GUI underlay image settings
#GUI.UnderlayImage.fileName = data/mi/map.png
# Image offset in pixels (x, y)
#GUI.UnderlayImage.offset = -415, -360
# Scaling factor for the image
#GUI.UnderlayImage.scale = 1.0
# Image rotation (radians)
#GUI.UnderlayImage.rotate = +0.0
